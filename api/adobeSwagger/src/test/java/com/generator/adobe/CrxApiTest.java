/*
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * The version of the OpenAPI document: 3.7.1-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.generator.adobe;

import base.BaseAdobeApiTest;
import io.qameta.allure.Epic;
import io.qameta.allure.Feature;
import io.qameta.allure.Story;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;
import org.openapitools.client.api.adobe.CrxApi;

import java.io.File;

@Tag("base")
@Epic("setEpic")
@Feature("setFeature")
@Story("setStory")
@Disabled
public class CrxApiTest extends BaseTest {

    private CrxApi api = crxApi;


    /**
     * CRXDE is enabled
     */
    @Test
    public void shouldSee200AfterGetCrxdeStatus() {
        api.getCrxdeStatus().execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * CRXDE is disabled
     */
    @Test
    public void shouldSee404AfterGetCrxdeStatus() {
        api.getCrxdeStatus().execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * Retrieved CRX package manager install status
     */
    @Test
    public void shouldSee200AfterGetInstallStatus() {
        api.getInstallStatus().execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Default response
     */
    @Test
    public void shouldSee0AfterGetInstallStatus() {
        api.getInstallStatus().execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * Package Manager Servlet is disabled
     */
    @Test
    public void shouldSee404AfterGetPackageManagerServlet() {
        api.getPackageManagerServlet().execute(r -> r.prettyPeek());
        // TODO: test validations
    }

    /**
     * Package Manager Servlet is active
     */
    @Test
    public void shouldSee405AfterGetPackageManagerServlet() {
        api.getPackageManagerServlet().execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * Default response
     */
    @Test
    public void shouldSee0AfterPostPackageService() {
        String cmd = null;
        api.postPackageService()
                .cmdQuery(cmd).execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * Default response
     */
    @Test
    public void shouldSee0AfterPostPackageServiceJson() {
        String path = null;
        String cmd = null;
        String groupName = null;
        String packageName = null;
        String packageVersion = null;
        String charset = null;
        Boolean force = null;
        Boolean recursive = null;
        File _package = null;
        api.postPackageServiceJson()
                .pathPath(path)
                .cmdQuery(cmd).execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * Default response
     */
    @Test
    public void shouldSee0AfterPostPackageUpdate() {
        String groupName = null;
        String packageName = null;
        String version = null;
        String path = null;
        String filter = null;
        String charset = null;
        api.postPackageUpdate()
                .groupNameQuery(groupName)
                .packageNameQuery(packageName)
                .versionQuery(version)
                .pathQuery(path).execute(r -> r.prettyPeek());
        // TODO: test validations
    }


    /**
     * Default response
     */
    @Test
    public void shouldSee0AfterPostSetPassword() {
        String old = null;
        String plain = null;
        String verify = null;
        api.postSetPassword()
                .oldQuery(old)
                .plainQuery(plain)
                .verifyQuery(verify).execute(r -> r.prettyPeek());
        // TODO: test validations
    }

}
